clearvars;
close all;

% Тестовый расчёт тестового спектра
Lambda = [360	380	400	420	440	460	480	500	520	540	560	580	600	620	640	660	680	700	720	740	760	780	800	820];
I = [56.1200000000000	57.9200000000000	58.8200000000000	58.9700000000000	58.5000000000000	57.5200000000000	56.1500000000000	54.4800000000000	52.6100000000000	50.5900000000000	48.4800000000000	46.3400000000000	44.1800000000000	42.0500000000000	39.9600000000000	37.9300000000000	35.9700000000000	34.0800000000000	32.2700000000000	30.5500000000000	28.9100000000000	27.3600000000000	25.8800000000000	24.4900000000000];
x_curve = [0.000130000000000000	0.00136800000000000	0.0143100000000000	0.134380000000000	0.348280000000000	0.290800000000000	0.0956400000000000	0.00490000000000000	0.0632700000000000	0.290400000000000	0.594500000000000	0.916300000000000	1.06220000000000	0.854450000000000	0.447900000000000	0.164900000000000	0.0467700000000000	0.0113590000000000	0.00289900000000000	0.000690000000000000	0.000166000000000000	4.20000000000000e-05	1.00000000000000e-05	3.00000000000000e-06];
y_curve = [4.00000000000000e-06	3.90000000000000e-05	0.000396000000000000	0.00400000000000000	0.0230000000000000	0.0600000000000000	0.139020000000000	0.323000000000000	0.710000000000000	0.954000000000000	0.995000000000000	0.870000000000000	0.631000000000000	0.381000000000000	0.175000000000000	0.0610000000000000	0.0170000000000000	0.00410200000000000	0.00104700000000000	0.000249000000000000	6.00000000000000e-05	1.50000000000000e-05	4.00000000000000e-06	1.00000000000000e-06];
z_curve = [0.000606000000000000	0.00645000000000000	0.0678500000000000	0.645600000000000	1.74706000000000	1.66920000000000	0.812950000000000	0.272000000000000	0.0782500000000000	0.0203000000000000	0.00390000000000000	0.00165000000000000	0.000800000000000000	0.000190000000000000	2.00000000000000e-05	0	0	0	0	0	0	0	0	0];

%% XYZ
kc = 100/trapz(Lambda, I.*y_curve);
X = kc * trapz(Lambda, I.*x_curve);
Y = kc * trapz(Lambda, I.*y_curve);
Z = kc * trapz(Lambda, I.*z_curve);
x = X/(X+Y+Z);
y = Y/(X+Y+Z);

%% Lu'v'
Luv = Y;
u = 4*X/(X+15*Y+3*Z);
v = 9*Y/(X+15*Y+3*Z);

%% L*a*b*
X_D50 = 96.422;
Y_D50 = 100;
Z_D50 = 82.521;
if (X/X_D50) > 0.00885645
    fx = (X/X_D50)^(1/3);
else
    fx = (903.3*X/X_D50+16)/116;
end
if (Y/Y_D50) > 0.00885645
    fy = (Y/Y_D50)^(1/3);
else
    fy = (903.3*Y/Y_D50+16)/116;
end
if (Z/Z_D50) > 0.00885645
    fz = (Z/Z_D50)^(1/3);
else
    fz = (903.3*Z/Z_D50+16)/116;
end
Lab = 116*fy-16;
a = 500*(fx-fy);
b = 200*(fy-fz);

%% КТЦ
c = 3e8;
h = 6.6262e-34;
k = 1.38067e-23;
LL = Lambda*1e-9;
M = 2*h*c^2./(LL.^5.*(exp(h*c./(LL*k*6000))-1));

Tc = [0	10	20	30	40	50	60	70	80	90	100	125	150	175	200	225	250	275	300	325	350	375	400	425	450	475	500	525	550	575	600];
ux0 = [0.180060000000000	0.180660000000000	0.181330000000000	0.182080000000000	0.182930000000000	0.183880000000000	0.184940000000000	0.186110000000000	0.187400000000000	0.188800000000000	0.190320000000000	0.194620000000000	0.199620000000000	0.205250000000000	0.211420000000000	0.218070000000000	0.225110000000000	0.232470000000000	0.240100000000000	0.247920000000000	0.255910000000000	0.264000000000000	0.272180000000000	0.280390000000000	0.288630000000000	0.296850000000000	0.305050000000000	0.313200000000000	0.321290000000000	0.329310000000000	0.337240000000000];
vx0 = [0.263520000000000	0.265890000000000	0.268460000000000	0.271190000000000	0.274070000000000	0.277090000000000	0.280210000000000	0.283420000000000	0.286680000000000	0.289970000000000	0.293260000000000	0.301410000000000	0.309210000000000	0.316470000000000	0.323120000000000	0.329090000000000	0.334390000000000	0.339040000000000	0.343080000000000	0.346550000000000	0.349510000000000	0.352000000000000	0.354070000000000	0.355770000000000	0.357140000000000	0.358230000000000	0.359070000000000	0.359680000000000	0.360110000000000	0.360380000000000	0.360510000000000];
t = [-0.243410000000000	-0.254790000000000	-0.268760000000000	-0.285390000000000	-0.304700000000000	-0.326750000000000	-0.351560000000000	-0.379150000000000	-0.409550000000000	-0.442780000000000	-0.478880000000000	-0.582040000000000	-0.704710000000000	-0.849010000000000	-1.01820000000000	-1.21680000000000	-1.45120000000000	-1.72980000000000	-2.06370000000000	-2.46810000000000	-2.96410000000000	-3.58140000000000	-4.36330000000000	-5.37620000000000	-6.72620000000000	-8.59550000000000	-11.3240000000000	-15.6280000000000	-23.3250000000000	-40.7700000000000	-116.450000000000];
ux = 4*X/(X+15*Y+3*Z); % u в специализированном цветовом простраснтве u' с точкой
vx = 6*Y/(X+15*Y+3*Z); % v в специализированном цветовом простраснтве v' с точкой

d = ((vx-vx0) - t.*(ux-ux0))./sqrt(1+t.^2);
pos_val = find(d > 0);
[d1, d1_idx] = min(d(pos_val));
d2_idx = d1_idx + 1;
d2 = d(d2_idx);
Tc1 = Tc(d1_idx);
Tc2 = Tc(d2_idx);
Txc = Tc1 + d1 * (Tc2-Tc1)/(d1-d2); %Тц в миревах (u)
TxcK = 1e6/Txc; % Тц в К

%% Ra около кривой планка с цветовым различием не более 0,01
plank = 2*h*c^2./(LL.^5.*(exp(h*c./(LL*k*7000))-1)); % эталонный источник
kc_ref = 100/trapz(LL, plank.*y_curve);
Xref = kc_ref * trapz(LL, plank.*x_curve);
Yref = kc_ref * trapz(LL, plank.*y_curve);
Zref = kc_ref * trapz(LL, plank.*z_curve);

Luv_ref = Yref;
u_ref = 4*Xref/(Xref+15*Yref+3*Zref);
v_ref = 9*Yref/(Xref+15*Yref+3*Zref);

R = ra.rObjects(Lambda);
R = R';

XRtest = zeros(1,14); YRtest = zeros(1,14); ZRtest = zeros(1,14);
LRtest = zeros(1,14); uRtest = zeros(1,14); vRtest = zeros(1,14);
LxRtest = zeros(1,14); uxRtest = zeros(1,14); vxRtest = zeros(1,14);

XRref = zeros(1,14); YRref = zeros(1,14); ZRref = zeros(1,14);
LRref = zeros(1,14); uRref = zeros(1,14); vRref = zeros(1,14);
LxRref = zeros(1,14); uxRref = zeros(1,14); vxRref = zeros(1,14);
dE = zeros(1, 14); CRI = zeros(1, 14);
for i=1:14
    % координаты цвета эталонных поврехностей, освещаемых исследуемым
    % (тестируемым) источником
    XRtest(1,i) = kc*trapz(Lambda, I.*R(i,:).*x_curve);
    YRtest(1,i) = kc*trapz(Lambda, I.*R(i,:).*y_curve);
    ZRtest(1,i) = kc*trapz(Lambda, I.*R(i,:).*z_curve);
    LRtest(1, i) = YRtest(1,i);
    uRtest(1, i) = 4*XRtest(1,i)/(XRtest(1,i)+15*YRtest(1,i)+3*ZRtest(1,i));
    vRtest(1, i) = 9*YRtest(1,i)/(XRtest(1,i)+15*YRtest(1,i)+3*ZRtest(1,i));
    LxRtest(1, i) = 116*(YRtest(1,i)/Y).^(1/3) - 16;
    uxRtest(1, i) = 13*LxRtest(1, i)*(uRtest(1, i)-u);
    vxRtest(1, i) = 13*LxRtest(1, i)*(vRtest(1, i)-v);

    % координаты цвета эталонных поврехностей, освещаемых эталонным
    % (референсным) источником
    XRref(1,i) = kc_ref*trapz(LL, plank.*R(i,:).*x_curve);
    YRref(1,i) = kc_ref*trapz(LL, plank.*R(i,:).*y_curve);
    ZRref(1,i) = kc_ref*trapz(LL, plank.*R(i,:).*z_curve);
    LRref(1, i) = YRref(1,i);
    uRref(1, i) = 4*XRref(1,i)/(XRref(1,i)+15*YRref(1,i)+3*ZRref(1,i));
    vRref(1, i) = 9*YRref(1,i)/(XRref(1,i)+15*YRref(1,i)+3*ZRref(1,i));
    LxRref(1, i) = 116*(YRref(1,i)/Y).^(1/3) - 16;
    uxRref(1, i) = 13*LxRref(1, i)*(uRref(1, i)-u);
    vxRref(1, i) = 13*LxRref(1, i)*(vRref(1, i)-v);
    
    % Цветовая разность
    dE(1, i) = sqrt(...
        (LxRtest(1, i)-LxRref(1, i))^2 + ...
        (uxRtest(1, i)-uxRref(1, i))^2 + ...
        (vxRtest(1, i)-vxRref(1, i))^2 ...
        );
    
    % Частные индексы цветопередачи
    CRI(1, i) = 100 - 4.6*dE(1, i);
end
    CRIo = mean(CRI);

%% Ra около кривой планка с цветовым различием более 0,01
plank2 = 2*h*c^2./(LL.^5.*(exp(h*c./(LL*k*TxcK))-1)); % эталонный источник
kc_ref2 = 100/trapz(LL, plank2.*y_curve);
Xref2 = kc_ref2 * trapz(LL, plank2.*x_curve);
Yref2 = kc_ref2 * trapz(LL, plank2.*y_curve);
Zref2 = kc_ref2 * trapz(LL, plank2.*z_curve);

Luv_ref2 = Yref2;
u_ref2 = 4*Xref2/(Xref2+15*Yref2+3*Zref2);
v_ref2 = 9*Yref2/(Xref2+15*Yref2+3*Zref2);

XRref2 = zeros(1,14); YRref2 = zeros(1,14); ZRref2 = zeros(1,14);
LRref2 = zeros(1,14); uRref2 = zeros(1,14); vRref2 = zeros(1,14);
LXRref2 = zeros(1,14); uXRref2 = zeros(1,14); vXRref2 = zeros(1,14);

rref2 = (4 - u_ref2 - 10 * v_ref2)/v_ref2;
fref2 = (1.708*v_ref2 + 0.404 - 1.481*u_ref2)/v_ref2;
rtest2 = (4 - u - 10 * v)/v;
ftest2 = (1.708*v + 0.404 - 1.481*u)/v;
rR2 = zeros(1,14); fR2 = zeros(1,14);
uxxRtest = zeros(1,14); vxxRtest = zeros(1,14);
LxxxRref = zeros(1,14); uxxxRref = zeros(1,14); vxxxRref = zeros(1,14);
LxxxRtest = zeros(1,14); uxxxRtest = zeros(1,14); vxxxRtest = zeros(1,14);
dE2 = zeros(1, 14); CRI2 = zeros(1, 14);
for i=1:14
    % координаты цвета эталонных поврехностей, освещаемых эталонным
    % (референсным) источником
    XRref2(1,i) = kc_ref2*trapz(LL, plank2.*R(i,:).*x_curve);
    YRref2(1,i) = kc_ref2*trapz(LL, plank2.*R(i,:).*y_curve);
    ZRref2(1,i) = kc_ref2*trapz(LL, plank2.*R(i,:).*z_curve);
    LRref2(1, i) = YRref2(1,i);
    uRref2(1, i) = 4*XRref2(1,i)/(XRref2(1,i)+15*YRref2(1,i)+3*ZRref2(1,i));
    vRref2(1, i) = 9*YRref2(1,i)/(XRref2(1,i)+15*YRref2(1,i)+3*ZRref2(1,i));
    LXRref2(1, i) = 116*(YRref2(1,i)/Y).^(1/3) - 16;
    uXRref2(1, i) = 13*LXRref2(1, i)*(uRref2(1, i)-u);
    vXRref2(1, i) = 13*LXRref2(1, i)*(vRref2(1, i)-v);

    rR2(1, i) = (4 - uRtest(1, i) - 10 * vRtest(1, i))/vRtest(1, i);
    fR2(1, i) = (1.708*vRtest(1, i) + 0.404 - 1.481*uRtest(1, i))/vRtest(1, i);

    uxxRtest(1, i) = (10.872+0.404*(rref2/rtest2)*rR2(1, i) - 4*(fref2/ftest2)*fR2(1, i))/(16.518+1.481*(rref2/rtest2)*rR2(1, i)-(fref2/ftest2)*fR2(1, i));
    vxxRtest(1, i) = 5.520/(16.518+1.481*(rref2/rtest2)*rR2(1, i)-(fref2/ftest2)*fR2(1, i));

    
    uxxtest = (10.872+0.404*rref2 - 4*fref2)/(16.518+1.481*rref2-fref2);
    vxxtest = 5.520/(16.518+1.481*rref2-fref2);

    LxxxRref(1, i) = (116*(YRref2(1,i)/Yref2)^(1/3)-16);
    uxxxRref(1, i) = 13*LxxxRref(1, i)*(uRref2(1, i)-u_ref2);
    vxxxRref(1, i) = 13*LxxxRref(1, i)*(vRref2(1, i)-v_ref2);

    LxxxRtest(1, i) = (116*(YRtest(1,i)/Y)^(1/3)-16);
    uxxxRtest(1, i) = 13*LxxxRtest(1, i)*(uxxRtest(1, i)-uxxtest);
    vxxxRtest(1, i) = 13*LxxxRtest(1, i)*(vxxRtest(1, i)-vxxtest);

% Цветовая разность
    dE2(1, i) = sqrt(...
        (LxxxRref(1, i)-LxxxRtest(1, i))^2 + ...
        (uxxxRref(1, i)-uxxxRtest(1, i))^2 + ...
        (vxxxRref(1, i)-vxxxRtest(1, i))^2 ...
        );
    
    % Частные индексы цветопередачи
    CRI2(1, i) = 100 - 4.6*dE2(1, i);
end
CRIo2 = mean(CRI2);

%% Вывод
fprintf('xy = (%.4f, %.4f), u''v'' = (%.4f, %.4f), a*b* = (%.4f, %.4f)\n', x, y, u, v, a, b);
fprintf('КТЦ = %.4f\n', TxcK);
fprintf('Ra near plank = %.4f, Ra not near plank = %.4f\n', CRIo, CRIo2);



